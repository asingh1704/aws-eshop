name: Build and Deploy React App

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x' # Adjust Node.js version as needed

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm ci
        working-directory: ./clients/aws-eshop-app # Update with the path to your React app

      # Step 4: Build the React app
      - name: Build React app
        run: npm run build
        working-directory: ./clients/aws-eshop-app # Update with the path to your React app

      # Step 5: Upload build artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: react-app-build
          path: ./clients/aws-eshop-app/build # Update with the path to your build directory

  deploy:
    runs-on: ubuntu-latest
    needs: build # Ensure this job runs after the build job

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up .NET Core
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.x' # Adjust to the required .NET version

      # Step 3: Install CDK Dependencies
      - name: Install CDK Dependencies
        run: |
          dotnet restore
          dotnet build
        working-directory: ./infrastructure/cdk/aws-eshop-app/src

      # Step 4: Deploy CDK Stack
      - name: Deploy CDK Stack
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          CDK_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}  # Set this to your AWS Account ID
          CDK_DEFAULT_REGION: ${{ secrets.AWS_REGION }}       # Set this to your desired AWS region
        run: |
          cdk deploy --require-approval never
        working-directory: ./infrastructure/cdk/aws-eshop-app